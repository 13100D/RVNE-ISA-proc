$date
   Sun Oct 20 23:15:39 2024
$end
$version
  2022.1
$end
$timescale
  1ps
$end
$scope module tb_riscv_pipeline_basic $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module dut $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var reg 32 % IF_ID_instr [31:0] $end
$var reg 32 & IF_ID_PC [31:0] $end
$var reg 32 ' ID_EX_PC [31:0] $end
$var reg 32 ( ID_EX_instr [31:0] $end
$var reg 32 ) ID_EX_read_data [31:0] $end
$var reg 5 * ID_EX_rs1 [4:0] $end
$var reg 5 + ID_EX_rd [4:0] $end
$var reg 1 , ID_EX_hint [0:0] $end
$var reg 12 - ID_EX_imm [11:0] $end
$var reg 3 . ID_EX_funct3 [2:0] $end
$var reg 32 / EX_MEM_alu_result [31:0] $end
$var reg 5 0 EX_MEM_rd [4:0] $end
$var reg 1 1 EX_MEM_hint [0:0] $end
$var reg 3 2 EX_MEM_funct3 [2:0] $end
$var reg 32 3 MEM_WB_alu_result [31:0] $end
$var reg 5 4 MEM_WB_rd [4:0] $end
$var reg 3 5 MEM_WB_funct3 [2:0] $end
$var reg 32 6 PC [31:0] $end
$var integer 32 7 i [31:0] $end
$var wire 7 8 opcode [6:0] $end
$var wire 5 9 rd [4:0] $end
$var wire 1 : hint [0:0] $end
$var wire 3 ; funct3 [2:0] $end
$var wire 5 < rs1 [4:0] $end
$var wire 12 = imm [11:0] $end
$var wire 32 > alu_input1 [31:0] $end
$var wire 32 ? alu_input2 [31:0] $end
$var reg 32 @ alu_result [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
1"
0#
1$
b0 %
b0 &
b0 '
b0 (
bx )
bx *
bx +
x,
bx -
bx .
b0 /
bx 0
x1
bx 2
b0 3
bx 4
bx 5
b0 6
b100000000 7
b0 8
b0 9
0:
b0 ;
b0 <
b0 =
bx >
b0xxxxxxxxxxxx ?
bx @
$end
#5000
1!
1#
#10000
0!
0#
#15000
1!
0"
1#
0$
b1001000010000001 %
b0 )
b0 *
b0 +
0,
b0 -
b0 .
bx /
b1 6
b1 8
b10001 9
b1 ;
b1 <
b0 >
b0 ?
b0 @
#20000
0!
0#
#25000
1!
1#
b10001001001000110000010 %
b1 &
b1001000010000001 (
b1 )
b1 *
b10001 +
b1 .
b0 /
b0 0
01
b0 2
bx 3
b10 6
b10 8
b11 9
b1001 <
b100 =
b1 >
b1 @
#30000
0!
0#
#35000
1!
1#
bx %
b10 &
b1 '
b10001001001000110000010 (
b1001 )
b1001 *
b11 +
b100 -
b1 /
b10001 0
b1 2
b0 3
b0 4
b0 5
b11 6
bx 8
bx 9
x:
bx ;
bx <
bx =
b1001 >
b100 ?
b1101 @
#40000
0!
0#
#45000
1!
1#
b11 &
b10 '
bx (
bx )
bx *
bx +
x,
bx -
bx .
b1101 /
b11 0
b1 3
b10001 4
b1 5
b100 6
bx >
b0xxxxxxxxxxxx ?
bx @
#50000
0!
0#
#55000
1!
1#
b100 &
b11 '
bx /
bx 0
x1
bx 2
b1101 3
b11 4
b101 6
#60000
0!
0#
#65000
1!
1#
b101 &
b100 '
bx 3
bx 4
bx 5
b110 6
#70000
0!
0#
#75000
1!
1#
b110 &
b101 '
b111 6
#80000
0!
0#
#85000
1!
1#
b111 &
b110 '
b1000 6
#90000
0!
0#
#95000
1!
1#
b1000 &
b111 '
b1001 6
